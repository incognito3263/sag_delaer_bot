#!/usr/bin/python

import os
import django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "sag.settings")
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"
django.setup()

import logging
import keyboards as kb
from aiogram import Bot, Dispatcher, executor, types
from environs import Env
from mainapp.models import *

env = Env()
env.read_env()

logging.basicConfig(level=logging.INFO)

bot = Bot(token=env('API_TOKEN'))
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', ])
async def send_welcome(message: types.Message):
    await message.reply('–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Telegram-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ SAG Gilamlari', reply_markup=kb.start_kb)


@dp.message_handler()
async def echo(message: types.Message):
    sent_answer = False
    collection = Collection.objects.filter(name__exact=str(message.text))
    if collection:
        collection = collection.first()
        sent_answer = True
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é ' + collection.name
        await message.answer(text, reply_markup=kb.get_sub_collections_kb(collection.id))
    sub_collection = SubCollection.objects.filter(name__exact=str(message.text))
    if sub_collection:
        sub_collection = sub_collection.first()
        sent_answer = True
        await message.answer(sub_collection.link)
    city = City.objects.filter(name__exact=str(message.text))
    if city:
        city = city.first()
        text = ''
        dealer = Dealer.objects.filter(city_id=city.id)
        if dealer:
            dealer = dealer.first()
            text += dealer.name + '\nüìç –ê–¥—Ä–µ—Å: ' + dealer.address
            text += '\n‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: ' + dealer.phone + '\n\n'
        sent_answer = True
        await message.answer(text)
    if sent_answer is False:
        if message.text == 'üèû –ö–∞—Ç–∞–ª–æ–≥':
            ChatUser.objects.get_or_create(user_id=message.chat.id)
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é', reply_markup=kb.get_collections_kb(message))
        elif message.text == 'üè¢ –î–∏–ª–ª–µ—Ä—ã':
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ì–æ—Ä–æ–¥', reply_markup=kb.get_dealers_kb())
        elif message.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
            text = 'üìç –ê–¥—Ä–µ—Å:\n          —É–ª. –°–ø–∏—Ç–∞–º–µ–Ω—à–æ—Ö 270 ( –û—Ä–∏–µ–Ω—Ç–∏—Ä: –õ–∏—Ñ—Ç–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–≤–æ–¥ )\n\n'
            text += '‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω:\n          +998 (95) 500-72-72\n\nüñ• –°–∞–π—Ç:\nhttps://sag.uz'
            await message.answer(text)
        elif message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é':
            await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=kb.start_kb)
        else:
            await message.answer('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º', reply_markup=kb.start_kb)


if __name__ == '__main__':
    executor.start_polling(dp)
